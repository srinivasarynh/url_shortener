version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./deploy/docker/Dockerfile
    container_name: url-shortener-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      - SERVER_PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=url_shortener
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - SHORT_URL_DOMAIN=http://localhost:8080
      - URL_LENGTH=6
      - ENVIRONMENT=development
    networks:
      - url-shortener-network

  db:
    image: postgres:14-alpine
    container_name: url-shortener-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=url_shortener
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - url-shortener-network

  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - url-shortener-network

  prometheus:
    image: prom/prometheus:latest
    container_name: url-shortener-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - url-shortener-network

  grafana:
    image: grafana/grafana:latest
    container_name: url-shortener-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - url-shortener-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  url-shortener-network:
    driver: bridge
